[tox]
minversion = 2.5.0
envlist = py37
skipsdist = True
ignore_basepython_conflict = True

[testenv]
# base environment setting for testing
basepython = python3
usedevelop = True
setenv = VIRTUAL_ENV={envdir}
         PYTHONWARNINGS=default::DeprecationWarning
install_command =
    pip install {opts} {packages}
deps =
    pytest
    stestr
    -r{toxinidir}/requirements.txt
commands =

[testenv:cover]
# Unit test coverage
whitelist_externals = sh
setenv =
    {[testenv]setenv}
    PYTHON=coverage run --source starfish --parallel-mode
commands =
    coverage erase
    sh -c 'OS_TEST_PATH={toxinidir}/starfish/tests/unit stestr run {posargs}'
    sh -c 'OS_TEST_PATH={toxinidir}/starfish/tests/functional stestr run {posargs}'
    coverage combine
# Generate a new HTML report with the combined results
# otherwise the HTML report will only show partial results
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report --fail-under=90 --skip-covered

[testenv:functional]
# This will use whatever 'basepython' is set to, so the name is ambiguous.
setenv = OS_TEST_PATH={toxinidir}/starfish/tests/functional

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:pep8]
commands = flake8
           # RST linter
           doc8 --ignore-path doc/source/contributor/modules specs \
           doc/source starfish  CONSTITUTION.rst HACKING.rst README.rst \
           TESTING.rst
           # Run security linter
           {[testenv:bandit]commands}
           # Make sure specs follow our template
           find . -type f -name "*.pyc" -delete
           python -m unittest specs-tests.test_titles
           sh ./tools/misc-sanity-checks.sh
           {toxinidir}/tools/coding-checks.sh --pylint {posargs}
           {[testenv:bashate]commands}
whitelist_externals =
    sh
    find
    bash

[testenv:docs]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/doc/requirements.txt
whitelist_externals = rm
commands =
    rm -rf doc/build api-guide/build api-ref/build doc/source/contributor/modules
    sphinx-build -W -b html doc/source doc/build/html
    sphinx-build -W -b html api-ref/source api-ref/build/html

[testenv:pdf-docs]
deps = {[testenv:docs]deps}
whitelist_externals =
    make
    rm
commands =
    rm -rf doc/build/pdf
    sphinx-build -W -b latex doc/source doc/build/pdf
    make -C doc/build/pdf

[testenv:venv]
commands = {posargs}

[testenv:genconfig]
whitelist_externals = mkdir
commands =
    mkdir -p etc/starfish
    oslo-config-generator --output-file etc/starfish/starfish.conf.sample \
    --namespace starfish \
    --namespace oslo.db \
    --namespace oslo.log \
    --namespace oslo.messaging \
    --namespace keystonemiddleware.auth_token \
    --namespace cotyledon

[testenv:genpolicy]
whitelist_externals = mkdir
commands =
    mkdir -p etc/starfish
    oslopolicy-sample-generator \
    --config-file etc/policy/starfish-policy-generator.conf

[testenv:bandit]
commands = bandit -r starfish -ll -ii -x tests

[flake8]
# [H104]: Empty file with only comments
# [W504]: Line break after binary operator
ignore = H104,W504
show-source = true
builtins = _
exclude = .venv,.git,.tox,dist,doc,*lib/python*,*egg,build
import-order-style = pep8
# [H106]: Don't put vim configuration in source files
# [H203]: Use assertIs(Not)None to check for None
# [H204]: Use assert(Not)Equal to check for equality
# [H205]: Use assert(Greater|Less)(Equal) for comparison
# [H904]: Delay string interpolations at logging calls
enable-extensions = H106,H203,H204,H205,H904

[testenv:bashate]
envdir = {toxworkdir}/shared
commands = bash -c "find {toxinidir}             \
           -not \( -type d -name .tox\* -prune \)  \
           -not \( -type d -name .venv\* -prune \) \
           -type f                                 \
           -name \*.sh                             \
           # [E005]: File does not begin with #! or have a .sh prefix
           # [E006]: Check for lines longer than 79 columns
           # [E042]: Local declaration hides errors
           # [E043]: Arithmetic compound has inconsistent return semantics
           -print0 | xargs -0 bashate -v -iE006 -eE005,E042,E043"

[doc8]
max-line-length = 79

[testenv:releasenotes]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/doc/requirements.txt
whitelist_externals = rm
commands =
    rm -rf releasenotes/build
    sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:lower-constraints]
deps =
    -r{toxinidir}/requirements.txt
whitelist_externals = sh
commands =
    sh -c 'OS_TEST_PATH={toxinidir}/starfish/tests/unit stestr run {posargs}'
    sh -c 'OS_TEST_PATH={toxinidir}/starfish/tests/functional stestr run {posargs}'